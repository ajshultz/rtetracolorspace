library(sleuth)
library("sleuth")
setwd("~/Dropbox/BirdImmuneGeneEvolution/")
#library(tidyverse)
library(dplyr)
library(readr)
library(tidyr)
library(ggplot2)
#Load dataset created with 1_PAML_Hyphy_res_DataPrep.R
load("~/Dropbox/BirdImmuneGeneEvolution/PAML/processed_data/all_res_ncbi.Rdat")
#How many genes with all tests for gene trees:
all_res_gene_ncbi %>%
filter(!is.na(pval_busted) & !is.na(PVal_m1m2) & !is.na(PVal_m2m2a) & !is.na(PVal_m7m8) & !is.na(PVal_m8m8a) & !is.na(total_sel.n)) %>%
summarise(n())
#How many genes with all tests for species trees:
all_res_sp_ncbi %>%
filter(!is.na(pval_busted) & !is.na(PVal_m1m2) & !is.na(PVal_m2m2a) & !is.na(PVal_m7m8) & !is.na(PVal_m8m8a) & !is.na(total_sel.n)) %>%
summarise(n())
#Load BIP, PIP and VIP annotations
bip<-read_csv("Mammal_Comparisons/bip_mammal.csv", col_names=c("ensID")) %>%
mutate(bip=TRUE)
pip<-read_csv("Mammal_Comparisons/pip_mammals.csv") %>% mutate(pip=TRUE) %>%
dplyr::select(ensID=GeneID, pip)
vip<-read_csv("Mammal_Comparisons/enard_vip.csv") %>% mutate(vip=TRUE) %>%
dplyr::select(ensID=`Ensembl identifier`, vip)
#Combine datasets
mammal_annot <- bip %>%
full_join(pip, by="ensID") %>%
full_join(vip, by="ensID")
#Read in chicken to human ensembl ID conversion, join annotation dataset.
ggal_hsap <- read_csv("Mammal_Comparisons/galgal_ens_to_human.txt", col_names = c("ggalEnsId", "ensID", "confidence"))
#Join annotation dataset and ensembl ID conversion, create bip, pip and vip tibbles with only those genes that fall into each category.
ggal_hsap <- full_join(mammal_annot, ggal_hsap, by="ensID") %>%
mutate(bip = !is.na(bip), vip=!is.na(vip), pip=!is.na(pip))
ggal_annot <- ggal_hsap %>% dplyr::select(ggalEnsId, confidence, bip, pip, vip) %>% filter(!is.na(ggalEnsId)) %>% group_by(ggalEnsId) %>% summarize(bip = sum(bip)>0, vip=sum(vip)>0, pip=sum(pip)>0)
#Translate chicken ensembl numbers to NCBI numbers, join to annotation data and write to file
ens_ncbi <- read_csv("Mammal_Comparisons/galgal_ens_to_ncbi.txt", col_names = c("ggalEnsId", "entrezID", "name"))
ggal_annot <- left_join(ggal_annot, ens_ncbi)
write_csv(ggal_annot, "Mammal_Comparisons/ggal_alt_annotation.csv")
#Load mammal data
enard_orig<-read_csv("Mammal_Comparisons/enard_hyphy.csv", col_names = T, guess_max=2000) %>% dplyr::rename(ensID = `Ensembl Gene ID`, BUSTED = `BUSTED P-value`)
enard <- enard_orig %>%
gather(branch, propsel, Human:Elephant) %>%
group_by(ensID, BUSTED) %>%
summarize(bs_ct = sum(propsel>0)) %>%
ungroup
#Add in data from primate specific testing
primate<-read_tsv("Mammal_Comparisons/primate-9sp-data.txt") %>%
dplyr::select(ensID = Ensembl.Gene.ID, psr = PSR.total) %>%
mutate(paml_sig = 1)
mammal_select = full_join(enard, primate) %>%
left_join(ggal_hsap)
#Remove missing data (replace by non-sig results, and filter non one-to-one mapping by choosing the minimum busted pvalue, etc.)
ggal_mammal_comp = mammal_select %>%
ungroup %>%
dplyr::select(ggalEnsId, BUSTED:paml_sig) %>%
filter(!is.na(ggalEnsId)) %>%
replace_na(list(BUSTED=1, bs_ct=0, psr=0, paml_sig=0)) %>%
group_by(ggalEnsId) %>%
summarize(bustedp = min(BUSTED, na.rm=T), bs_ct = max(bs_ct, na.rm=T), psr = max(psr, na.rm=T), paml_sig = max(paml_sig, na.rm=T))
#Add in ensembl IDs and write to file.
ggal_mammal_comp <- ggal_mammal_comp %>%
left_join(ens_ncbi)
ggal_mammal_comp %>%
write_csv("Mammal_Comparisons/ggal_mammal_comp.csv")
#Combine bird and mammal datasets, only keep BUSTED results to ensure direct cmoparisons with mammals.
birds<-all_res_sp_ncbi %>%
dplyr::select(entrezgene,hog,pval_busted:FDRPval_busted)
imm<-full_join(ggal_mammal_comp, ggal_annot) %>%
filter(!is.na(entrezID)) %>%
full_join(., birds, by=c("entrezID" = "entrezgene")) %>% filter(!is.na(hog))
#lets see if there is overlap in sig
#Get -log10 pvalues.
imm<-imm %>% mutate(mammal_logp = -1 * log10(bustedp+2.22e-16), bird_logp = -1 * log10(pval_busted+2.22e-16))
imm %>% filter(!is.na(mammal_logp), !is.na(bird_logp)) %>%
ggplot(aes(x=bird_logp, y=mammal_logp, col=vip)) + geom_point() + geom_smooth(method="lm")
imm
imm <- imm %>% mutate(mammal_q = p.adjust(bustedp, method="BH"), bird_q = p.adjust(pval_busted, method="BH"))
table(imm$mammal_q < 0.01, imm$bird_q < 0.01) %>% fisher.test
table(imm$mammal_q < 0.01, imm$bird_q < 0.01)
?makeTxDbFromGFF
??makeTxDbFromGFF
source("RtcsFunctions.R")
source("~/Git_Repos/rtetracolorspace/RtcsFunctions.R")
setwd("~/Git_Repos/rtetracolorspace/.")
source("RtcsFunctions.R")
load("bluetitss.dat")
refs <- read.csv("EunCamf_allpatches.csv")
refstims <- stim(refs,ss)
refcart <- cartCoord(refstims)
refsphere <- sphereCoord(refcart)
rmax <- rMax(refsphere)
acheivedr <- acheivedR(refsphere,rmax)
normbrill <- normBrill(refs)
vol <- colorVolume(refcart)
disp <- hueDisp(refsphere)
disp.summary <- summary.hueDisp(disp)
spans <- colorSpan(refcart)
spans.summary <- summary.colorSpan(spans)
avgChroma(refsphere)
avgAcheivedChroma(acheivedr)
avgBrill(normbrill)
summaryOfpatches(refs,ss)
install.packages("geometry")
summaryOfpatches(refs,ss)
drawTcs()
source("visualization.R")
drawTcs()
install.packages("rgl")
drawTcs()
library(rgl)
require(rgl)
require(rgl)
